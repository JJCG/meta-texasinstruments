--- /dev/null	1969-12-31 18:00:00.000000000 -0600
+++ omx/system/src/openmax_il/resource_activity_monitor/inc/Makefile	2008-06-23 09:32:22.000000000 -0500
@@ -0,0 +1,13 @@
+
+HSRC=Resource_Activity_Monitor.h
+HTARGET=$(HSRC:%=$(SYSTEMINCLUDEDIR)/%)
+
+include $(OMXROOT)/Master.mk
+
+all install:: $(SYSTEMINCLUDEDIR) $(HTARGET) 
+
+$(SYSTEMINCLUDEDIR)/%: % 
+	cp -f $< $@
+
+clobber::
+	rm -f $(SYSTEMINCLUDEDIR)/Resource_Activity_Monitor.h
--- /dev/null	1969-12-31 18:00:00.000000000 -0600
+++ omx/system/src/openmax_il/resource_activity_monitor/inc/Resource_Activity_Monitor.h	2008-11-10 16:47:04.000000000 -0600
@@ -0,0 +1,25 @@
+
+
+#define RAM_ENABLED
+
+#define OPERATING_POINT_1 1
+#define OPERATING_POINT_1_MHZ 90
+
+#define OPERATING_POINT_2 2
+#define OPERATING_POINT_2_MHZ 180
+
+#define OPERATING_POINT_3 3
+#define OPERATING_POINT_3_MHZ 360
+
+#define OPERATING_POINT_4 4
+#define OPERATING_POINT_4_MHZ 400
+
+#define OPERATING_POINT_5 5
+#define OPERATING_POINT_5_MHZ 430
+
+
+void omap_pm_set_constraint(int ID, int MHz);
+
+int omap_pm_get_constraint(int ID);
+char * ram_itoa(int a);
+
--- /dev/null	1969-12-31 18:00:00.000000000 -0600
+++ omx/system/src/openmax_il/resource_activity_monitor/Makefile	2008-06-23 09:30:21.000000000 -0500
@@ -0,0 +1,15 @@
+ 
+
+all::
+
+# pull in the master "inherited" definitions
+include $(OMXROOT)/Master.mk
+
+DIRS= \
+	src \
+	inc 
+      	
+
+$(BASETARGETS)::
+	@$(call traverse_dirs,$(DIRS),$@)
+
--- /dev/null	1969-12-31 18:00:00.000000000 -0600
+++ omx/system/src/openmax_il/resource_activity_monitor/src/Makefile	2008-06-23 09:31:25.000000000 -0500
@@ -0,0 +1,50 @@
+# Debug Flags:
+#     0 - NO DEBUG MESSAGES
+#     1 - DEBUG MESSAGES are enabled
+
+OMX_DEBUG ?= 0      # master switch: turn debug on or off
+
+SRC=\
+	Resource_Activity_Monitor.c
+
+HSRC=$(wildcard ../inc/*)
+
+OBJ=$(SRC:.c=.o)
+
+include $(OMXROOT)/Master.mk
+
+CFLAGS+=-I../inc -I$(OMXINCLUDEDIR) -I$(BRIDGEINCLUDEDIR) -Wall -ansi -fpic -pipe -DOMAP_2430 
+ifeq ($(OMX_DEBUG), 1)
+    CFLAGS += -O0
+else
+    CFLAGS += -O2
+endif
+
+ifeq ($(OMX_DEBUG), 1)
+    CFLAGS += -DOMX_DEBUG=1
+endif
+
+OMXCORE_LIB=$(OMXLIBDIR)/libOMX_Core.so
+COMPONENT_LIB=libRAM.so
+
+COMPONENT_TARGET=$(OMXLIBDIR)/$(COMPONENT_LIB)
+
+all install:: $(COMPONENT_TARGET)
+
+omxcore $(COMPONENT_TARGET): $(COMPONENT_LIB) $(OMXLIBDIR) $(OMXCORE_LIB)
+	@echo "Installing $(COMPONENT_LIB)"
+	cp -f $(COMPONENT_LIB) $(COMPONENT_TARGET)
+
+$(COMPONENT_LIB): $(OBJ)
+	$(CROSS)gcc $(CFLAGS) -shared -o $(COMPONENT_LIB) $(OBJ) -L$(BRIDGELIBDIR) -lbridge -lpthread
+
+$(SRC): $(HSRC)
+
+clean:: 
+	rm -f $(COMPONENT_LIB)
+	rm -f $(OBJ)
+
+distclean:: clean
+
+clobber:: clean
+	rm -f $(OMXLIBDIR)/$(COMPONENT_LIB)
--- /dev/null	1969-12-31 18:00:00.000000000 -0600
+++ omx/system/src/openmax_il/resource_activity_monitor/src/Resource_Activity_Monitor.c	2008-11-10 16:47:04.000000000 -0600
@@ -0,0 +1,56 @@
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+#include "Resource_Activity_Monitor.h"
+
+
+void omap_pm_set_constraint(int ID, int MHz)
+{
+#ifdef RAM_ENABLED
+    char command[100];
+    unsigned int operatingPoint;
+
+    if (MHz < OPERATING_POINT_1_MHZ) {
+        operatingPoint = OPERATING_POINT_1;
+    }
+    else if (MHz < OPERATING_POINT_2_MHZ) {
+        operatingPoint = OPERATING_POINT_2;
+    }
+    else if (MHz < OPERATING_POINT_3_MHZ) {
+        operatingPoint = OPERATING_POINT_3;
+    }
+    else if (MHz < OPERATING_POINT_4_MHZ) {
+        operatingPoint = OPERATING_POINT_4;
+    }
+    else {
+        operatingPoint = OPERATING_POINT_5;
+    }
+    
+    printf("[setting operating point] MHz = %d operatingPoint = %d\n",MHz,operatingPoint);
+    strcpy(command,"echo -n ");
+    strcat(command,ram_itoa(operatingPoint));
+    strcat(command," > /sys/power/vdd1_opp_value");
+    system(command);
+#endif    
+}
+
+int omap_pm_get_constraint(int ID)
+{
+    printf("[omap_pm_get_constraint] id = %d \n",ID);
+    return 0;
+}
+
+char * ram_itoa(int a)
+{
+    static char str[50];
+    int i = sizeof(str) - 1;
+    if (i != 0) {
+        do {
+            str[--i] = '0' + a % 10;
+        }
+        while ((a = a / 10) && i >= 0);
+    }
+    return &str[i];
+}
+
